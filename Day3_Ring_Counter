module Day3_Ring_Counter(
    input  clk,
    input  reset,
    output reg [3:0] count
);
    reg FF0, FF1, FF2, FF3;

    always @(posedge clk) begin
        if (reset) begin
            FF0   <= 1'b1;
            FF1   <= 1'b0;
            FF2   <= 1'b0;
            FF3   <= 1'b0;
            count <= 4'b0001;
        end
        else begin
            FF1   <= FF0;
            FF2   <= FF1;
            FF3   <= FF2;
            FF0   <= FF3;
            count <= {FF3, FF2, FF1, FF0};
        end
    end
endmodule

-----------------------------------------------------------------------------------------

module tb_Day3_Ring_Counter;
    reg clk, reset;
    wire [3:0] count;

    Day3_Ring_Counter uut (
    .clk(clk),
    .reset(reset),
    .count(count)
     );

 // Clock generation: 10ns period (100 MHz)
  initial begin
    clk = 0;
    forever #5 clk = ~clk; 
  end

   initial begin
   reset = 1;
   #20;
   reset = 0;
   #200;
   reset = 1;
   #15;
   reset = 0;
   #200;
   end
endmodule
